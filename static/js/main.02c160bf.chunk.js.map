{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","class","href","id","action","method","role","style","display","type","name","tabindex","placeholder","value","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02c160bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div class=\"container\">\n            <div class=\"row\">\n              <div class=\"col-md-6 col-md-offset-3\">\n                <div class=\"panel panel-login\">\n                  <div class=\"panel-heading\">\n                    <div class=\"row\">\n                      <div class=\"col-xs-6\">\n                        <a href=\"#\" class=\"active\" id=\"login-form-link\">Belépés</a>\n                      </div>\n                      <div class=\"col-xs-6\">\n                        <a href=\"#\" id=\"register-form-link\">Regisztráció</a>\n                      </div>\n                    </div>\n                    <hr />\n                  </div>\n                  <div class=\"panel-body\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-12\">\n                        <form id=\"login-form\" action=\"https://phpoll.com/login/process\" method=\"post\" role=\"form\" style={{ display : 'block' }}>\n                          <div class=\"form-group\">\n                            <input type=\"text\" name=\"username\" id=\"username\" tabindex=\"1\" class=\"form-control\" placeholder=\"Email cím\" value=\"\" />\n                          </div>\n                          <div class=\"form-group\">\n                            <input type=\"password\" name=\"password\" id=\"password\" tabindex=\"2\" class=\"form-control\" placeholder=\"Jelszó\" />\n                          </div>\n                          <div class=\"form-group\">\n                            <div class=\"row\">\n                              <div class=\"col-sm-6 col-sm-offset-3\">\n                                <input type=\"submit\" name=\"login-submit\" id=\"login-submit\" tabindex=\"4\" class=\"form-control btn btn-login\" value=\"Belépés\" />\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"form-group\">\n                            <div class=\"row\">\n                              <div class=\"col-lg-12\">\n                                <div class=\"text-center\">\n                                  <a href=\"https://phpoll.com/recover\" tabindex=\"5\" class=\"forgot-password\">Elfelejtetted jelszavad?</a>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                        <form id=\"register-form\" action=\"https://phpoll.com/register/process\" method=\"post\" role=\"form\" style={{ display : 'none' }}>\n                          <div class=\"form-group\">\n                            <input type=\"text\" name=\"username\" id=\"username\" tabindex=\"1\" class=\"form-control\" placeholder=\"Becenév\" value=\"\" />\n                          </div>\n                          <div class=\"form-group\">\n                            <input type=\"email\" name=\"email\" id=\"email\" tabindex=\"1\" class=\"form-control\" placeholder=\"Email cím\" value=\"\" />\n                          </div>\n                          <div class=\"form-group\">\n                            <input type=\"password\" name=\"password\" id=\"password\" tabindex=\"2\" class=\"form-control\" placeholder=\"Jelszó\" />\n                          </div>\n                          <div class=\"form-group\">\n                            <input type=\"password\" name=\"confirm-password\" id=\"confirm-password\" tabindex=\"2\" class=\"form-control\" placeholder=\"Jelszó megerősítése\" />\n                          </div>\n                          <div class=\"form-group\">\n                            <div class=\"row\">\n                              <div class=\"col-sm-6 col-sm-offset-3\">\n                                <input type=\"submit\" name=\"register-submit\" id=\"register-submit\" tabindex=\"4\" class=\"form-control btn btn-register\" value=\"Regisztrálok\" />\n                              </div>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p class=\"mt-5 mb-3 text-muted\">© 2019</p>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}